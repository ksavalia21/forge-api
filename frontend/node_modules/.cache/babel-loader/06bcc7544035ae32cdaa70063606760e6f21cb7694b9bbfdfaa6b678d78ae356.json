{"ast":null,"code":"const normalizeUrl = url => {\n  return url.endsWith(\"/\") ? url.slice(0, -1) : url;\n};\nconst API_URL = normalizeUrl(process.env.REACT_APP_API_URL || \"http://localhost:8000\");\nexport const generateDocumentation = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  try {\n    const response = await fetch(`${API_URL}/api/generate`, {\n      method: \"POST\",\n      body: formData\n      // Don't set Content-Type header - it will be set automatically with boundary\n    });\n    if (!response.ok) {\n      let errorMessage;\n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.detail || `Error: ${response.status} ${response.statusText}`;\n      } catch (e) {\n        errorMessage = `Error: ${response.status} ${response.statusText}`;\n      }\n      throw new Error(errorMessage);\n    }\n    return response;\n  } catch (error) {\n    console.error(\"API Error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["normalizeUrl","url","endsWith","slice","API_URL","process","env","REACT_APP_API_URL","generateDocumentation","file","formData","FormData","append","response","fetch","method","body","ok","errorMessage","errorData","json","detail","status","statusText","e","Error","error","console"],"sources":["/Users/keyursavalia/Downloads/api-doc-main/frontend/src/services/api.js"],"sourcesContent":["const normalizeUrl = (url) => {\n  return url.endsWith(\"/\") ? url.slice(0, -1) : url;\n};\n\nconst API_URL = normalizeUrl(\n  process.env.REACT_APP_API_URL || \"http://localhost:8000\"\n);\n\nexport const generateDocumentation = async (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n\n  try {\n    const response = await fetch(`${API_URL}/api/generate`, {\n      method: \"POST\",\n      body: formData,\n      // Don't set Content-Type header - it will be set automatically with boundary\n    });\n\n    if (!response.ok) {\n      let errorMessage;\n      try {\n        const errorData = await response.json();\n        errorMessage =\n          errorData.detail ||\n          `Error: ${response.status} ${response.statusText}`;\n      } catch (e) {\n        errorMessage = `Error: ${response.status} ${response.statusText}`;\n      }\n      throw new Error(errorMessage);\n    }\n\n    return response;\n  } catch (error) {\n    console.error(\"API Error:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAIC,GAAG,IAAK;EAC5B,OAAOA,GAAG,CAACC,QAAQ,CAAC,GAAG,CAAC,GAAGD,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGF,GAAG;AACnD,CAAC;AAED,MAAMG,OAAO,GAAGJ,YAAY,CAC1BK,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBACnC,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,IAAI,IAAK;EACnD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,eAAe,EAAE;MACtDW,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;MACN;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MAChB,IAAIC,YAAY;MAChB,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QACvCF,YAAY,GACVC,SAAS,CAACE,MAAM,IAChB,UAAUR,QAAQ,CAACS,MAAM,IAAIT,QAAQ,CAACU,UAAU,EAAE;MACtD,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVN,YAAY,GAAG,UAAUL,QAAQ,CAACS,MAAM,IAAIT,QAAQ,CAACU,UAAU,EAAE;MACnE;MACA,MAAM,IAAIE,KAAK,CAACP,YAAY,CAAC;IAC/B;IAEA,OAAOL,QAAQ;EACjB,CAAC,CAAC,OAAOa,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IAClC,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}